plugins {
    id "com.google.protobuf"
    id 'com.android.application'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdkVersion 33
    ndkVersion "19.2.5345600"
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId "ly.pp.justpiano3"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 52
        versionName "4.8"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
                abiFilters 'armeabi-v7a', 'arm64-v8a'
                arguments "-DANDROID_PLATFORM=android-29", "-DANDROID_STL=c++_shared"
            }
        }
        buildConfigField("String", "BUILD_TIME", "\"" + new Date().format('yyyyMMddHHmmss') + "\"")
        multiDexEnabled true
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }

    signingConfigs {
        debug {
            storeFile file('../key.jks')
            storePassword 'as2134.@u'
            keyAlias 'as2134u'
            keyPassword 'as2134.@u'
        }

        release {
            storeFile file('../key.jks')
            storePassword 'as2134.@u'
            keyAlias 'as2134u'
            keyPassword 'as2134.@u'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
            debuggable true
        }

        externalNativeBuild {
            cmake {
                path "src/main/cpp/CMakeLists.txt"
            }
        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }

        sourceSets {
            main {
                java {
                    srcDirs += ['src/main/java', 'build/generated/source/proto']
                }
                proto {
                    srcDir 'src/main/protobuf'
                    include '**/*.proto'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.3.0'
    // jlayer，用于解码mp3音源
    implementation 'javazoom:jlayer:1.0.1'
    // netty
    implementation 'io.netty:netty-all:4.1.100.Final'
    // protobuf，版本号最好和服务端保持一致，降低序列化问题风险
    implementation 'com.google.protobuf:protobuf-java:3.23.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.21"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0'
    // sqlite、Room库
    implementation 'androidx.sqlite:sqlite:2.1.0'
    implementation 'androidx.room:room-runtime:2.4.0'
    implementation 'androidx.paging:paging-runtime:2.1.2'
    annotationProcessor 'androidx.room:room-compiler:2.4.0'
    implementation 'androidx.room:room-ktx:2.4.0'
    kapt "androidx.room:room-compiler:2.4.0"
    // native-crash 用于上报C++异常闪退日志
    implementation 'io.github.BAByte:native-crash:1.0.6@aar'
    implementation 'net.margaritov.preference.colorpicker.ColorPickerPreference:ColorPickerPreference:1.0.0'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.23.0'
    }

    generateProtoTasks {
        all().each { task ->
            task.outputs.upToDateWhen { false } // always run the task
            task.builtins {
                java {
                    outputSubDir = '../' // set the output directory to the parent directory
                }
            }
        }
    }
}