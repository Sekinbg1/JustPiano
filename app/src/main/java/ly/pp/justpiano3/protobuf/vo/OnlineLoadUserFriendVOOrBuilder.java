// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OnlineResponseProtocol.proto

package ly.pp.justpiano3.protobuf.vo;

public interface OnlineLoadUserFriendVOOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ly.pp.justpiano3.protobuf.vo.OnlineLoadUserFriendVO)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 当前用户位置
   * </pre>
   *
   * <code>uint32 location = 1;</code>
   * @return The location.
   */
  int getLocation();

  /**
   * <pre>
   * 用户列表
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVO friend_user = 2;</code>
   */
  java.util.List<ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVO> 
      getFriendUserList();
  /**
   * <pre>
   * 用户列表
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVO friend_user = 2;</code>
   */
  ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVO getFriendUser(int index);
  /**
   * <pre>
   * 用户列表
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVO friend_user = 2;</code>
   */
  int getFriendUserCount();
  /**
   * <pre>
   * 用户列表
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVO friend_user = 2;</code>
   */
  java.util.List<? extends ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVOOrBuilder> 
      getFriendUserOrBuilderList();
  /**
   * <pre>
   * 用户列表
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVO friend_user = 2;</code>
   */
  ly.pp.justpiano3.protobuf.vo.OnlineFriendUserVOOrBuilder getFriendUserOrBuilder(
      int index);
}
