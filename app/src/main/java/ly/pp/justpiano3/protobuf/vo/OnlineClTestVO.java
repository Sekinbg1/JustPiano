// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OnlineResponseProtocol.proto

package ly.pp.justpiano3.protobuf.vo;

/**
 * <pre>
 * 等级考试
 * </pre>
 *
 * Protobuf type {@code ly.pp.justpiano3.protobuf.vo.OnlineClTestVO}
 */
public final class OnlineClTestVO extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ly.pp.justpiano3.protobuf.vo.OnlineClTestVO)
    OnlineClTestVOOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OnlineClTestVO.newBuilder() to construct.
  private OnlineClTestVO(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OnlineClTestVO() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OnlineClTestVO();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OnlineClTestVO(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            type_ = input.readUInt32();
            break;
          }
          case 18: {
            ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.Builder subBuilder = null;
            if (clTestCase_ == 2) {
              subBuilder = ((ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_).toBuilder();
            }
            clTest_ =
                input.readMessage(ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_);
              clTest_ = subBuilder.buildPartial();
            }
            clTestCase_ = 2;
            break;
          }
          case 26: {
            ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.Builder subBuilder = null;
            if (clTestCase_ == 3) {
              subBuilder = ((ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_).toBuilder();
            }
            clTest_ =
                input.readMessage(ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_);
              clTest_ = subBuilder.buildPartial();
            }
            clTestCase_ = 3;
            break;
          }
          case 34: {
            ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.Builder subBuilder = null;
            if (clTestCase_ == 4) {
              subBuilder = ((ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_).toBuilder();
            }
            clTest_ =
                input.readMessage(ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_);
              clTest_ = subBuilder.buildPartial();
            }
            clTestCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineClTestVO_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineClTestVO_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ly.pp.justpiano3.protobuf.vo.OnlineClTestVO.class, ly.pp.justpiano3.protobuf.vo.OnlineClTestVO.Builder.class);
  }

  private int clTestCase_ = 0;
  private java.lang.Object clTest_;
  public enum ClTestCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CL_TEST_DIALOG(2),
    CL_TEST_SONG(3),
    CL_TEST_FINISH(4),
    CLTEST_NOT_SET(0);
    private final int value;
    private ClTestCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClTestCase valueOf(int value) {
      return forNumber(value);
    }

    public static ClTestCase forNumber(int value) {
      switch (value) {
        case 2: return CL_TEST_DIALOG;
        case 3: return CL_TEST_SONG;
        case 4: return CL_TEST_FINISH;
        case 0: return CLTEST_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ClTestCase
  getClTestCase() {
    return ClTestCase.forNumber(
        clTestCase_);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <pre>
   * 消息类型
   * </pre>
   *
   * <code>uint32 type = 1;</code>
   * @return The type.
   */
  @java.lang.Override
  public int getType() {
    return type_;
  }

  public static final int CL_TEST_DIALOG_FIELD_NUMBER = 2;
  /**
   * <pre>
   * 等级考试选择考级曲对话框
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
   * @return Whether the clTestDialog field is set.
   */
  @java.lang.Override
  public boolean hasClTestDialog() {
    return clTestCase_ == 2;
  }
  /**
   * <pre>
   * 等级考试选择考级曲对话框
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
   * @return The clTestDialog.
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO getClTestDialog() {
    if (clTestCase_ == 2) {
       return (ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_;
    }
    return ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.getDefaultInstance();
  }
  /**
   * <pre>
   * 等级考试选择考级曲对话框
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVOOrBuilder getClTestDialogOrBuilder() {
    if (clTestCase_ == 2) {
       return (ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_;
    }
    return ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.getDefaultInstance();
  }

  public static final int CL_TEST_SONG_FIELD_NUMBER = 3;
  /**
   * <pre>
   * 等级考试获取考级曲
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
   * @return Whether the clTestSong field is set.
   */
  @java.lang.Override
  public boolean hasClTestSong() {
    return clTestCase_ == 3;
  }
  /**
   * <pre>
   * 等级考试获取考级曲
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
   * @return The clTestSong.
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO getClTestSong() {
    if (clTestCase_ == 3) {
       return (ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_;
    }
    return ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.getDefaultInstance();
  }
  /**
   * <pre>
   * 等级考试获取考级曲
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVOOrBuilder getClTestSongOrBuilder() {
    if (clTestCase_ == 3) {
       return (ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_;
    }
    return ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.getDefaultInstance();
  }

  public static final int CL_TEST_FINISH_FIELD_NUMBER = 4;
  /**
   * <pre>
   * 等级考试弹奏完成
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
   * @return Whether the clTestFinish field is set.
   */
  @java.lang.Override
  public boolean hasClTestFinish() {
    return clTestCase_ == 4;
  }
  /**
   * <pre>
   * 等级考试弹奏完成
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
   * @return The clTestFinish.
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO getClTestFinish() {
    if (clTestCase_ == 4) {
       return (ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_;
    }
    return ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.getDefaultInstance();
  }
  /**
   * <pre>
   * 等级考试弹奏完成
   * </pre>
   *
   * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVOOrBuilder getClTestFinishOrBuilder() {
    if (clTestCase_ == 4) {
       return (ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_;
    }
    return ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != 0) {
      output.writeUInt32(1, type_);
    }
    if (clTestCase_ == 2) {
      output.writeMessage(2, (ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_);
    }
    if (clTestCase_ == 3) {
      output.writeMessage(3, (ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_);
    }
    if (clTestCase_ == 4) {
      output.writeMessage(4, (ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, type_);
    }
    if (clTestCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_);
    }
    if (clTestCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_);
    }
    if (clTestCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ly.pp.justpiano3.protobuf.vo.OnlineClTestVO)) {
      return super.equals(obj);
    }
    ly.pp.justpiano3.protobuf.vo.OnlineClTestVO other = (ly.pp.justpiano3.protobuf.vo.OnlineClTestVO) obj;

    if (getType()
        != other.getType()) return false;
    if (!getClTestCase().equals(other.getClTestCase())) return false;
    switch (clTestCase_) {
      case 2:
        if (!getClTestDialog()
            .equals(other.getClTestDialog())) return false;
        break;
      case 3:
        if (!getClTestSong()
            .equals(other.getClTestSong())) return false;
        break;
      case 4:
        if (!getClTestFinish()
            .equals(other.getClTestFinish())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType();
    switch (clTestCase_) {
      case 2:
        hash = (37 * hash) + CL_TEST_DIALOG_FIELD_NUMBER;
        hash = (53 * hash) + getClTestDialog().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CL_TEST_SONG_FIELD_NUMBER;
        hash = (53 * hash) + getClTestSong().hashCode();
        break;
      case 4:
        hash = (37 * hash) + CL_TEST_FINISH_FIELD_NUMBER;
        hash = (53 * hash) + getClTestFinish().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ly.pp.justpiano3.protobuf.vo.OnlineClTestVO prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 等级考试
   * </pre>
   *
   * Protobuf type {@code ly.pp.justpiano3.protobuf.vo.OnlineClTestVO}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ly.pp.justpiano3.protobuf.vo.OnlineClTestVO)
      ly.pp.justpiano3.protobuf.vo.OnlineClTestVOOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineClTestVO_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineClTestVO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ly.pp.justpiano3.protobuf.vo.OnlineClTestVO.class, ly.pp.justpiano3.protobuf.vo.OnlineClTestVO.Builder.class);
    }

    // Construct using ly.pp.justpiano3.protobuf.vo.OnlineClTestVO.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = 0;

      clTestCase_ = 0;
      clTest_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineClTestVO_descriptor;
    }

    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestVO getDefaultInstanceForType() {
      return ly.pp.justpiano3.protobuf.vo.OnlineClTestVO.getDefaultInstance();
    }

    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestVO build() {
      ly.pp.justpiano3.protobuf.vo.OnlineClTestVO result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestVO buildPartial() {
      ly.pp.justpiano3.protobuf.vo.OnlineClTestVO result = new ly.pp.justpiano3.protobuf.vo.OnlineClTestVO(this);
      result.type_ = type_;
      if (clTestCase_ == 2) {
        if (clTestDialogBuilder_ == null) {
          result.clTest_ = clTest_;
        } else {
          result.clTest_ = clTestDialogBuilder_.build();
        }
      }
      if (clTestCase_ == 3) {
        if (clTestSongBuilder_ == null) {
          result.clTest_ = clTest_;
        } else {
          result.clTest_ = clTestSongBuilder_.build();
        }
      }
      if (clTestCase_ == 4) {
        if (clTestFinishBuilder_ == null) {
          result.clTest_ = clTest_;
        } else {
          result.clTest_ = clTestFinishBuilder_.build();
        }
      }
      result.clTestCase_ = clTestCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ly.pp.justpiano3.protobuf.vo.OnlineClTestVO) {
        return mergeFrom((ly.pp.justpiano3.protobuf.vo.OnlineClTestVO)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ly.pp.justpiano3.protobuf.vo.OnlineClTestVO other) {
      if (other == ly.pp.justpiano3.protobuf.vo.OnlineClTestVO.getDefaultInstance()) return this;
      if (other.getType() != 0) {
        setType(other.getType());
      }
      switch (other.getClTestCase()) {
        case CL_TEST_DIALOG: {
          mergeClTestDialog(other.getClTestDialog());
          break;
        }
        case CL_TEST_SONG: {
          mergeClTestSong(other.getClTestSong());
          break;
        }
        case CL_TEST_FINISH: {
          mergeClTestFinish(other.getClTestFinish());
          break;
        }
        case CLTEST_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ly.pp.justpiano3.protobuf.vo.OnlineClTestVO parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ly.pp.justpiano3.protobuf.vo.OnlineClTestVO) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int clTestCase_ = 0;
    private java.lang.Object clTest_;
    public ClTestCase
        getClTestCase() {
      return ClTestCase.forNumber(
          clTestCase_);
    }

    public Builder clearClTest() {
      clTestCase_ = 0;
      clTest_ = null;
      onChanged();
      return this;
    }


    private int type_ ;
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVOOrBuilder> clTestDialogBuilder_;
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     * @return Whether the clTestDialog field is set.
     */
    @java.lang.Override
    public boolean hasClTestDialog() {
      return clTestCase_ == 2;
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     * @return The clTestDialog.
     */
    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO getClTestDialog() {
      if (clTestDialogBuilder_ == null) {
        if (clTestCase_ == 2) {
          return (ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_;
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.getDefaultInstance();
      } else {
        if (clTestCase_ == 2) {
          return clTestDialogBuilder_.getMessage();
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     */
    public Builder setClTestDialog(ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO value) {
      if (clTestDialogBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clTest_ = value;
        onChanged();
      } else {
        clTestDialogBuilder_.setMessage(value);
      }
      clTestCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     */
    public Builder setClTestDialog(
        ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.Builder builderForValue) {
      if (clTestDialogBuilder_ == null) {
        clTest_ = builderForValue.build();
        onChanged();
      } else {
        clTestDialogBuilder_.setMessage(builderForValue.build());
      }
      clTestCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     */
    public Builder mergeClTestDialog(ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO value) {
      if (clTestDialogBuilder_ == null) {
        if (clTestCase_ == 2 &&
            clTest_ != ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.getDefaultInstance()) {
          clTest_ = ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.newBuilder((ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_)
              .mergeFrom(value).buildPartial();
        } else {
          clTest_ = value;
        }
        onChanged();
      } else {
        if (clTestCase_ == 2) {
          clTestDialogBuilder_.mergeFrom(value);
        }
        clTestDialogBuilder_.setMessage(value);
      }
      clTestCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     */
    public Builder clearClTestDialog() {
      if (clTestDialogBuilder_ == null) {
        if (clTestCase_ == 2) {
          clTestCase_ = 0;
          clTest_ = null;
          onChanged();
        }
      } else {
        if (clTestCase_ == 2) {
          clTestCase_ = 0;
          clTest_ = null;
        }
        clTestDialogBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.Builder getClTestDialogBuilder() {
      return getClTestDialogFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     */
    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVOOrBuilder getClTestDialogOrBuilder() {
      if ((clTestCase_ == 2) && (clTestDialogBuilder_ != null)) {
        return clTestDialogBuilder_.getMessageOrBuilder();
      } else {
        if (clTestCase_ == 2) {
          return (ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_;
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 等级考试选择考级曲对话框
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO cl_test_dialog = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVOOrBuilder> 
        getClTestDialogFieldBuilder() {
      if (clTestDialogBuilder_ == null) {
        if (!(clTestCase_ == 2)) {
          clTest_ = ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.getDefaultInstance();
        }
        clTestDialogBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVOOrBuilder>(
                (ly.pp.justpiano3.protobuf.vo.OnlineClTestDialogVO) clTest_,
                getParentForChildren(),
                isClean());
        clTest_ = null;
      }
      clTestCase_ = 2;
      onChanged();;
      return clTestDialogBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVOOrBuilder> clTestSongBuilder_;
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     * @return Whether the clTestSong field is set.
     */
    @java.lang.Override
    public boolean hasClTestSong() {
      return clTestCase_ == 3;
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     * @return The clTestSong.
     */
    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO getClTestSong() {
      if (clTestSongBuilder_ == null) {
        if (clTestCase_ == 3) {
          return (ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_;
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.getDefaultInstance();
      } else {
        if (clTestCase_ == 3) {
          return clTestSongBuilder_.getMessage();
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     */
    public Builder setClTestSong(ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO value) {
      if (clTestSongBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clTest_ = value;
        onChanged();
      } else {
        clTestSongBuilder_.setMessage(value);
      }
      clTestCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     */
    public Builder setClTestSong(
        ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.Builder builderForValue) {
      if (clTestSongBuilder_ == null) {
        clTest_ = builderForValue.build();
        onChanged();
      } else {
        clTestSongBuilder_.setMessage(builderForValue.build());
      }
      clTestCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     */
    public Builder mergeClTestSong(ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO value) {
      if (clTestSongBuilder_ == null) {
        if (clTestCase_ == 3 &&
            clTest_ != ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.getDefaultInstance()) {
          clTest_ = ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.newBuilder((ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_)
              .mergeFrom(value).buildPartial();
        } else {
          clTest_ = value;
        }
        onChanged();
      } else {
        if (clTestCase_ == 3) {
          clTestSongBuilder_.mergeFrom(value);
        }
        clTestSongBuilder_.setMessage(value);
      }
      clTestCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     */
    public Builder clearClTestSong() {
      if (clTestSongBuilder_ == null) {
        if (clTestCase_ == 3) {
          clTestCase_ = 0;
          clTest_ = null;
          onChanged();
        }
      } else {
        if (clTestCase_ == 3) {
          clTestCase_ = 0;
          clTest_ = null;
        }
        clTestSongBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.Builder getClTestSongBuilder() {
      return getClTestSongFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     */
    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVOOrBuilder getClTestSongOrBuilder() {
      if ((clTestCase_ == 3) && (clTestSongBuilder_ != null)) {
        return clTestSongBuilder_.getMessageOrBuilder();
      } else {
        if (clTestCase_ == 3) {
          return (ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_;
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 等级考试获取考级曲
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO cl_test_song = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVOOrBuilder> 
        getClTestSongFieldBuilder() {
      if (clTestSongBuilder_ == null) {
        if (!(clTestCase_ == 3)) {
          clTest_ = ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.getDefaultInstance();
        }
        clTestSongBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVOOrBuilder>(
                (ly.pp.justpiano3.protobuf.vo.OnlineClTestSongVO) clTest_,
                getParentForChildren(),
                isClean());
        clTest_ = null;
      }
      clTestCase_ = 3;
      onChanged();;
      return clTestSongBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVOOrBuilder> clTestFinishBuilder_;
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     * @return Whether the clTestFinish field is set.
     */
    @java.lang.Override
    public boolean hasClTestFinish() {
      return clTestCase_ == 4;
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     * @return The clTestFinish.
     */
    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO getClTestFinish() {
      if (clTestFinishBuilder_ == null) {
        if (clTestCase_ == 4) {
          return (ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_;
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.getDefaultInstance();
      } else {
        if (clTestCase_ == 4) {
          return clTestFinishBuilder_.getMessage();
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     */
    public Builder setClTestFinish(ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO value) {
      if (clTestFinishBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clTest_ = value;
        onChanged();
      } else {
        clTestFinishBuilder_.setMessage(value);
      }
      clTestCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     */
    public Builder setClTestFinish(
        ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.Builder builderForValue) {
      if (clTestFinishBuilder_ == null) {
        clTest_ = builderForValue.build();
        onChanged();
      } else {
        clTestFinishBuilder_.setMessage(builderForValue.build());
      }
      clTestCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     */
    public Builder mergeClTestFinish(ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO value) {
      if (clTestFinishBuilder_ == null) {
        if (clTestCase_ == 4 &&
            clTest_ != ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.getDefaultInstance()) {
          clTest_ = ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.newBuilder((ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_)
              .mergeFrom(value).buildPartial();
        } else {
          clTest_ = value;
        }
        onChanged();
      } else {
        if (clTestCase_ == 4) {
          clTestFinishBuilder_.mergeFrom(value);
        }
        clTestFinishBuilder_.setMessage(value);
      }
      clTestCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     */
    public Builder clearClTestFinish() {
      if (clTestFinishBuilder_ == null) {
        if (clTestCase_ == 4) {
          clTestCase_ = 0;
          clTest_ = null;
          onChanged();
        }
      } else {
        if (clTestCase_ == 4) {
          clTestCase_ = 0;
          clTest_ = null;
        }
        clTestFinishBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.Builder getClTestFinishBuilder() {
      return getClTestFinishFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     */
    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVOOrBuilder getClTestFinishOrBuilder() {
      if ((clTestCase_ == 4) && (clTestFinishBuilder_ != null)) {
        return clTestFinishBuilder_.getMessageOrBuilder();
      } else {
        if (clTestCase_ == 4) {
          return (ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_;
        }
        return ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 等级考试弹奏完成
     * </pre>
     *
     * <code>.ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO cl_test_finish = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVOOrBuilder> 
        getClTestFinishFieldBuilder() {
      if (clTestFinishBuilder_ == null) {
        if (!(clTestCase_ == 4)) {
          clTest_ = ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.getDefaultInstance();
        }
        clTestFinishBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO, ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVOOrBuilder>(
                (ly.pp.justpiano3.protobuf.vo.OnlineClTestFinishVO) clTest_,
                getParentForChildren(),
                isClean());
        clTest_ = null;
      }
      clTestCase_ = 4;
      onChanged();;
      return clTestFinishBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ly.pp.justpiano3.protobuf.vo.OnlineClTestVO)
  }

  // @@protoc_insertion_point(class_scope:ly.pp.justpiano3.protobuf.vo.OnlineClTestVO)
  private static final ly.pp.justpiano3.protobuf.vo.OnlineClTestVO DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ly.pp.justpiano3.protobuf.vo.OnlineClTestVO();
  }

  public static ly.pp.justpiano3.protobuf.vo.OnlineClTestVO getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OnlineClTestVO>
      PARSER = new com.google.protobuf.AbstractParser<OnlineClTestVO>() {
    @java.lang.Override
    public OnlineClTestVO parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OnlineClTestVO(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OnlineClTestVO> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OnlineClTestVO> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineClTestVO getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

