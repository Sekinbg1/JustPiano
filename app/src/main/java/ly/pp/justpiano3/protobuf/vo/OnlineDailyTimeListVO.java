// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OnlineResponseProtocol.proto

package ly.pp.justpiano3.protobuf.vo;

/**
 * <pre>
 * 昨日在线时长列表
 * </pre>
 *
 * Protobuf type {@code ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO}
 */
public final class OnlineDailyTimeListVO extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO)
    OnlineDailyTimeListVOOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OnlineDailyTimeListVO.newBuilder() to construct.
  private OnlineDailyTimeListVO(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OnlineDailyTimeListVO() {
    dailyTimeUser_ = java.util.Collections.emptyList();
    tomorrowBonus_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OnlineDailyTimeListVO();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OnlineDailyTimeListVO(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              dailyTimeUser_ = new java.util.ArrayList<ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO>();
              mutable_bitField0_ |= 0x00000001;
            }
            dailyTimeUser_.add(
                input.readMessage(ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.parser(), extensionRegistry));
            break;
          }
          case 16: {

            todayOnlineTime_ = input.readUInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            tomorrowBonus_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        dailyTimeUser_ = java.util.Collections.unmodifiableList(dailyTimeUser_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineDailyTimeListVO_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineDailyTimeListVO_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO.class, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO.Builder.class);
  }

  public static final int DAILY_TIME_USER_FIELD_NUMBER = 1;
  private java.util.List<ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO> dailyTimeUser_;
  /**
   * <pre>
   * 昨日在线时长列表内用户
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
   */
  @java.lang.Override
  public java.util.List<ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO> getDailyTimeUserList() {
    return dailyTimeUser_;
  }
  /**
   * <pre>
   * 昨日在线时长列表内用户
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVOOrBuilder> 
      getDailyTimeUserOrBuilderList() {
    return dailyTimeUser_;
  }
  /**
   * <pre>
   * 昨日在线时长列表内用户
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
   */
  @java.lang.Override
  public int getDailyTimeUserCount() {
    return dailyTimeUser_.size();
  }
  /**
   * <pre>
   * 昨日在线时长列表内用户
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO getDailyTimeUser(int index) {
    return dailyTimeUser_.get(index);
  }
  /**
   * <pre>
   * 昨日在线时长列表内用户
   * </pre>
   *
   * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
   */
  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVOOrBuilder getDailyTimeUserOrBuilder(
      int index) {
    return dailyTimeUser_.get(index);
  }

  public static final int TODAY_ONLINE_TIME_FIELD_NUMBER = 2;
  private int todayOnlineTime_;
  /**
   * <pre>
   * 今日在线时长
   * </pre>
   *
   * <code>uint32 today_online_time = 2;</code>
   * @return The todayOnlineTime.
   */
  @java.lang.Override
  public int getTodayOnlineTime() {
    return todayOnlineTime_;
  }

  public static final int TOMORROW_BONUS_FIELD_NUMBER = 3;
  private volatile java.lang.Object tomorrowBonus_;
  /**
   * <pre>
   * 明日可领奖励
   * </pre>
   *
   * <code>string tomorrow_bonus = 3;</code>
   * @return The tomorrowBonus.
   */
  @java.lang.Override
  public java.lang.String getTomorrowBonus() {
    java.lang.Object ref = tomorrowBonus_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tomorrowBonus_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 明日可领奖励
   * </pre>
   *
   * <code>string tomorrow_bonus = 3;</code>
   * @return The bytes for tomorrowBonus.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTomorrowBonusBytes() {
    java.lang.Object ref = tomorrowBonus_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tomorrowBonus_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < dailyTimeUser_.size(); i++) {
      output.writeMessage(1, dailyTimeUser_.get(i));
    }
    if (todayOnlineTime_ != 0) {
      output.writeUInt32(2, todayOnlineTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tomorrowBonus_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tomorrowBonus_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < dailyTimeUser_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, dailyTimeUser_.get(i));
    }
    if (todayOnlineTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, todayOnlineTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tomorrowBonus_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tomorrowBonus_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO)) {
      return super.equals(obj);
    }
    ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO other = (ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO) obj;

    if (!getDailyTimeUserList()
        .equals(other.getDailyTimeUserList())) return false;
    if (getTodayOnlineTime()
        != other.getTodayOnlineTime()) return false;
    if (!getTomorrowBonus()
        .equals(other.getTomorrowBonus())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDailyTimeUserCount() > 0) {
      hash = (37 * hash) + DAILY_TIME_USER_FIELD_NUMBER;
      hash = (53 * hash) + getDailyTimeUserList().hashCode();
    }
    hash = (37 * hash) + TODAY_ONLINE_TIME_FIELD_NUMBER;
    hash = (53 * hash) + getTodayOnlineTime();
    hash = (37 * hash) + TOMORROW_BONUS_FIELD_NUMBER;
    hash = (53 * hash) + getTomorrowBonus().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 昨日在线时长列表
   * </pre>
   *
   * Protobuf type {@code ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO)
      ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVOOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineDailyTimeListVO_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineDailyTimeListVO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO.class, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO.Builder.class);
    }

    // Construct using ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDailyTimeUserFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (dailyTimeUserBuilder_ == null) {
        dailyTimeUser_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        dailyTimeUserBuilder_.clear();
      }
      todayOnlineTime_ = 0;

      tomorrowBonus_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ly.pp.justpiano3.protobuf.vo.OnlineResponse.internal_static_ly_pp_justpiano3_protobuf_vo_OnlineDailyTimeListVO_descriptor;
    }

    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO getDefaultInstanceForType() {
      return ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO.getDefaultInstance();
    }

    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO build() {
      ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO buildPartial() {
      ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO result = new ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO(this);
      int from_bitField0_ = bitField0_;
      if (dailyTimeUserBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dailyTimeUser_ = java.util.Collections.unmodifiableList(dailyTimeUser_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dailyTimeUser_ = dailyTimeUser_;
      } else {
        result.dailyTimeUser_ = dailyTimeUserBuilder_.build();
      }
      result.todayOnlineTime_ = todayOnlineTime_;
      result.tomorrowBonus_ = tomorrowBonus_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO) {
        return mergeFrom((ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO other) {
      if (other == ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO.getDefaultInstance()) return this;
      if (dailyTimeUserBuilder_ == null) {
        if (!other.dailyTimeUser_.isEmpty()) {
          if (dailyTimeUser_.isEmpty()) {
            dailyTimeUser_ = other.dailyTimeUser_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDailyTimeUserIsMutable();
            dailyTimeUser_.addAll(other.dailyTimeUser_);
          }
          onChanged();
        }
      } else {
        if (!other.dailyTimeUser_.isEmpty()) {
          if (dailyTimeUserBuilder_.isEmpty()) {
            dailyTimeUserBuilder_.dispose();
            dailyTimeUserBuilder_ = null;
            dailyTimeUser_ = other.dailyTimeUser_;
            bitField0_ = (bitField0_ & ~0x00000001);
            dailyTimeUserBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDailyTimeUserFieldBuilder() : null;
          } else {
            dailyTimeUserBuilder_.addAllMessages(other.dailyTimeUser_);
          }
        }
      }
      if (other.getTodayOnlineTime() != 0) {
        setTodayOnlineTime(other.getTodayOnlineTime());
      }
      if (!other.getTomorrowBonus().isEmpty()) {
        tomorrowBonus_ = other.tomorrowBonus_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO> dailyTimeUser_ =
      java.util.Collections.emptyList();
    private void ensureDailyTimeUserIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        dailyTimeUser_ = new java.util.ArrayList<ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO>(dailyTimeUser_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVOOrBuilder> dailyTimeUserBuilder_;

    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public java.util.List<ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO> getDailyTimeUserList() {
      if (dailyTimeUserBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dailyTimeUser_);
      } else {
        return dailyTimeUserBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public int getDailyTimeUserCount() {
      if (dailyTimeUserBuilder_ == null) {
        return dailyTimeUser_.size();
      } else {
        return dailyTimeUserBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO getDailyTimeUser(int index) {
      if (dailyTimeUserBuilder_ == null) {
        return dailyTimeUser_.get(index);
      } else {
        return dailyTimeUserBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder setDailyTimeUser(
        int index, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO value) {
      if (dailyTimeUserBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDailyTimeUserIsMutable();
        dailyTimeUser_.set(index, value);
        onChanged();
      } else {
        dailyTimeUserBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder setDailyTimeUser(
        int index, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder builderForValue) {
      if (dailyTimeUserBuilder_ == null) {
        ensureDailyTimeUserIsMutable();
        dailyTimeUser_.set(index, builderForValue.build());
        onChanged();
      } else {
        dailyTimeUserBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder addDailyTimeUser(ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO value) {
      if (dailyTimeUserBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDailyTimeUserIsMutable();
        dailyTimeUser_.add(value);
        onChanged();
      } else {
        dailyTimeUserBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder addDailyTimeUser(
        int index, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO value) {
      if (dailyTimeUserBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDailyTimeUserIsMutable();
        dailyTimeUser_.add(index, value);
        onChanged();
      } else {
        dailyTimeUserBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder addDailyTimeUser(
        ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder builderForValue) {
      if (dailyTimeUserBuilder_ == null) {
        ensureDailyTimeUserIsMutable();
        dailyTimeUser_.add(builderForValue.build());
        onChanged();
      } else {
        dailyTimeUserBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder addDailyTimeUser(
        int index, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder builderForValue) {
      if (dailyTimeUserBuilder_ == null) {
        ensureDailyTimeUserIsMutable();
        dailyTimeUser_.add(index, builderForValue.build());
        onChanged();
      } else {
        dailyTimeUserBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder addAllDailyTimeUser(
        java.lang.Iterable<? extends ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO> values) {
      if (dailyTimeUserBuilder_ == null) {
        ensureDailyTimeUserIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dailyTimeUser_);
        onChanged();
      } else {
        dailyTimeUserBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder clearDailyTimeUser() {
      if (dailyTimeUserBuilder_ == null) {
        dailyTimeUser_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        dailyTimeUserBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public Builder removeDailyTimeUser(int index) {
      if (dailyTimeUserBuilder_ == null) {
        ensureDailyTimeUserIsMutable();
        dailyTimeUser_.remove(index);
        onChanged();
      } else {
        dailyTimeUserBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder getDailyTimeUserBuilder(
        int index) {
      return getDailyTimeUserFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVOOrBuilder getDailyTimeUserOrBuilder(
        int index) {
      if (dailyTimeUserBuilder_ == null) {
        return dailyTimeUser_.get(index);  } else {
        return dailyTimeUserBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public java.util.List<? extends ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVOOrBuilder> 
         getDailyTimeUserOrBuilderList() {
      if (dailyTimeUserBuilder_ != null) {
        return dailyTimeUserBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dailyTimeUser_);
      }
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder addDailyTimeUserBuilder() {
      return getDailyTimeUserFieldBuilder().addBuilder(
          ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.getDefaultInstance());
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder addDailyTimeUserBuilder(
        int index) {
      return getDailyTimeUserFieldBuilder().addBuilder(
          index, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.getDefaultInstance());
    }
    /**
     * <pre>
     * 昨日在线时长列表内用户
     * </pre>
     *
     * <code>repeated .ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO daily_time_user = 1;</code>
     */
    public java.util.List<ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder> 
         getDailyTimeUserBuilderList() {
      return getDailyTimeUserFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVOOrBuilder> 
        getDailyTimeUserFieldBuilder() {
      if (dailyTimeUserBuilder_ == null) {
        dailyTimeUserBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVO.Builder, ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeUserVOOrBuilder>(
                dailyTimeUser_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        dailyTimeUser_ = null;
      }
      return dailyTimeUserBuilder_;
    }

    private int todayOnlineTime_ ;
    /**
     * <pre>
     * 今日在线时长
     * </pre>
     *
     * <code>uint32 today_online_time = 2;</code>
     * @return The todayOnlineTime.
     */
    @java.lang.Override
    public int getTodayOnlineTime() {
      return todayOnlineTime_;
    }
    /**
     * <pre>
     * 今日在线时长
     * </pre>
     *
     * <code>uint32 today_online_time = 2;</code>
     * @param value The todayOnlineTime to set.
     * @return This builder for chaining.
     */
    public Builder setTodayOnlineTime(int value) {
      
      todayOnlineTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 今日在线时长
     * </pre>
     *
     * <code>uint32 today_online_time = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTodayOnlineTime() {
      
      todayOnlineTime_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object tomorrowBonus_ = "";
    /**
     * <pre>
     * 明日可领奖励
     * </pre>
     *
     * <code>string tomorrow_bonus = 3;</code>
     * @return The tomorrowBonus.
     */
    public java.lang.String getTomorrowBonus() {
      java.lang.Object ref = tomorrowBonus_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tomorrowBonus_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 明日可领奖励
     * </pre>
     *
     * <code>string tomorrow_bonus = 3;</code>
     * @return The bytes for tomorrowBonus.
     */
    public com.google.protobuf.ByteString
        getTomorrowBonusBytes() {
      java.lang.Object ref = tomorrowBonus_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tomorrowBonus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 明日可领奖励
     * </pre>
     *
     * <code>string tomorrow_bonus = 3;</code>
     * @param value The tomorrowBonus to set.
     * @return This builder for chaining.
     */
    public Builder setTomorrowBonus(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tomorrowBonus_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 明日可领奖励
     * </pre>
     *
     * <code>string tomorrow_bonus = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTomorrowBonus() {
      
      tomorrowBonus_ = getDefaultInstance().getTomorrowBonus();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 明日可领奖励
     * </pre>
     *
     * <code>string tomorrow_bonus = 3;</code>
     * @param value The bytes for tomorrowBonus to set.
     * @return This builder for chaining.
     */
    public Builder setTomorrowBonusBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tomorrowBonus_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO)
  }

  // @@protoc_insertion_point(class_scope:ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO)
  private static final ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO();
  }

  public static ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OnlineDailyTimeListVO>
      PARSER = new com.google.protobuf.AbstractParser<OnlineDailyTimeListVO>() {
    @java.lang.Override
    public OnlineDailyTimeListVO parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OnlineDailyTimeListVO(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OnlineDailyTimeListVO> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OnlineDailyTimeListVO> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ly.pp.justpiano3.protobuf.vo.OnlineDailyTimeListVO getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

